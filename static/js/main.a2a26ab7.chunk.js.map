{"version":3,"sources":["components/Pages/ConnectionPage/GitHubLink/styles.module.scss","components/Pages/ProjectPage/Widget/Views/StepView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TabsView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TwoAxisJoystickView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TextInputView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartLegend/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LcdDisplayView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TerminalView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LevelView/LevelChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LedView/styles.module.scss","components/Pages/ConnectionPage/styles.module.scss","components/Pages/ProjectPage/styles.module.scss","components/Pages/ProjectPage/Widget/styles.module.scss","components/Pages/ProjectPage/Widget/Views/SliderView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/NumericalDisplayView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/DataStreamsChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartControl/styles.module.scss","components/Pages/ProjectPage/Widget/Views/RgbView/styles.module.scss","components/Pages/Scrollbar/styles.module.scss","components/Pages/ProjectPage/Widget/Views/GaugeView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LevelView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/MapView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/ImageView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/SegmentedControlView/styles.module.scss","browser.js","redux/modules/settings/actionTypes.js","redux/modules/settings/reducer.js","redux/modules/settings/index.js","redux/modules/blynk/actionTypes.js","redux/modules/blynk/reducer.js","redux/modules/blynk/index.js","redux/modules/index.js","redux/store.js","utils/immutable.js","common/blynkWSClient.js","utils/connection.js","utils/data.js","redux/modules/blynk/actions.js","utils/validation.js","components/Pages/ConnectionPage/GitHubLink/GitHubLink.js","components/Pages/ConnectionPage/ConnectionPage.js","components/Pages/ProjectPage/Widget/WidgetLabel/WidgetLabel.js","redux/selectors.js","utils/color.js","components/Pages/ProjectPage/Widget/Views/ButtonView/ButtonView.js","components/Pages/ProjectPage/Widget/Views/SliderView/SliderView.js","components/Pages/ProjectPage/Widget/Views/NumericalDisplayView/NumericalDisplayView.js","components/Pages/ProjectPage/Widget/Views/UnknownView/UnknownView.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/DataStreamsChart/DataStreamsChart.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartLegend/ChartLegend.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartControl/ChartControl.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/EnhancedGraphView.js","components/Pages/ProjectPage/Widget/Views/RgbView/RgbView.js","components/Pages/ProjectPage/Widget/Views/TwoAxisJoystickView/TwoAxisJoystickView.js","components/Pages/Scrollbar/Scrollbar.js","components/Pages/ProjectPage/Widget/Views/TerminalView/TerminalView.js","components/Pages/ProjectPage/Widget/Views/VerticalSliderView/VerticalSliderView.js","components/Pages/ProjectPage/Widget/Views/LcdDisplayView/LcdDisplayView.js","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeChart/GaugeChart.js","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeView.js","components/Pages/ProjectPage/Widget/Views/LevelView/LevelChart/LevelChart.js","components/Pages/ProjectPage/Widget/Views/LevelView/LevelView.js","components/Pages/ProjectPage/Widget/Views/StepView/StepView.js","components/Pages/ProjectPage/Widget/Views/LedView/LedView.js","components/Pages/ProjectPage/Widget/Views/TabsView/TabsView.js","components/Pages/ProjectPage/Widget/Views/EmptyView/EmptyView.js","components/Pages/ProjectPage/Widget/Views/MapView/MapView.js","components/Pages/ProjectPage/Widget/Views/ImageView/ImageView.js","components/Pages/ProjectPage/Widget/Views/TextInputView/TextInputView.js","components/Pages/ProjectPage/Widget/Views/SegmentedControlView/SegmentedControlView.js","components/Pages/ProjectPage/Widget/Widget.js","components/Pages/ProjectPage/ProjectPage.js","components/Root/Root.js","index.js","serviceWorker.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/ButtonView/styles.module.scss","components/Pages/ProjectPage/Widget/WidgetLabel/styles.module.scss"],"names":["module","exports","main","octicon","buttonsContainer","verticalButtonsContainer","dividerVertical","dividerHorizontal","button","backLine","value","minMaxLabel","minLabel","maxLabel","tabsContainer","tab","tabsInner","activeTab","tabList","stickContainer","sizeContainer","mainContainer","stick","container","controlButton","legend","legendItem","legendCell","line","outputContainer","output","ledContainer","ledCircle","emptyFiller","form","form-appear","title","error","connectionProblem","tokensInput","root","workspace","workspaceInner","header","headerInner","headerTitle","headerControls","headerDelimiter","widgetsArea","selectAutoSync","tabsRoot","sliderContainer","chartContainer","control","colorPickerContainer","thumb","loading","chart","widgetLabelContainer","widgetLabel","map","imageContainer","Element","prototype","closest","css","node","this","matches","parentElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","UPDATE_SETTINGS","initialState","Immutable","reducer","state","arguments","length","undefined","action","type","settings","merge","SET_CONNECTION_PARAMS","SET_PROJECT","SET_PIN_VALUE","SET_PIN_HISTORY","LOGOUT","SET_ACTIVE_TAB_ID","SET_AUTO_SYNC","defaultTokens","localStorage","getItem","split","defaultServerHost","defaultPort","Number","defaultConnectionMode","defaultAutoSync","tokens","serverHost","serverPort","connectionMode","autoSync","activeTabId","project","devices","set","tabId","deviceId","pin","device","getIn","setIn","history","combineReducers","blynk","configureStore","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","rootReducer","listToMap","list","keyField","result","forEach","listItem","get","MsgType","RESPONSE","LOGIN","PING","TWEET","EMAIL","NOTIFY","BRIDGE","HW_SYNC","HW_INFO","HARDWARE","BlynkWSClient","isRunning","socket","pingTimer","token","debugging","handleWSMessage","event","data","ArrayBuffer","bufArray","DataView","getInt8","_this","console","info","messageToDebugString","handleHardwareMessage","buf","slice","String","fromCharCode","Uint8Array","warn","_throttleSendFunctions","throttleSend","throttle","send","bind","Object","assertThisInitialized","_this2","_ref","stop","WebSocket","binaryType","onmessage","onopen","start","onclose","onerror","syncTimer","repeat","sync","delay","skipFirst","_this3","firstTimeDelay","interval","updateDelay","close","dataView","cmdString","cmd","getStringByCommandCode","msgId","getUint16","responseCode","statusCode","getStatusByCode","dispatchEvent","dontSend","pinType","pinNumber","dispatchWritePin","_data$split","_data$split2","slicedToArray","readyState","OPEN","commandAndBody","message","createMessage","cmdBody","join","getCommandByString","buildBlynkMessage","bodyLength","setInt8","setInt16","i","offset","charCodeAt","EventHandler","classCallCheck","_events","includes","push","filter","details","eventHandler","blynkWSMultiClient","_clients","getBlynkWSClient","_this4","getHttpBlynkUrl","getWidgetPinAddress","widget","toLowerCase","formatValueString","valueFormatting","pinExpression","replace","RegExp","escapeRegExp","g1","g2","g3","valueStr","parseFloat","toFixed","escape","setPinValue","_ref6","required","GitHubLink","react_default","a","createElement","className","styles","href","target","rel","viewBox","version","aria-hidden","fillRule","d","React","Component","ErrorString","meta","touched","InputGroupField","input","props","objectWithoutProperties","Fragment","inputGroup","objectSpread","ConnectionPage_ErrorString","TextAreaField","_ref2","textArea","HTMLSelectField","_ref3","htmlSelect","ConnectionPage","_React$Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","busy","connectionError","handleSubmit","_ref4","asyncToGenerator","regenerator_default","mark","_callee","params","_this$props","setConnectionParams","testConnection","wrap","_context","prev","next","trim","setState","t0","response","text","_x","inherits","createClass","key","_this$state","_this$props2","cn","react_final_form_es","onSubmit","initialValues","render","_ref5","formGroup","label","labelFor","helperText","name","id","component","validate","fill","options","buttons","disabled","icon","submitButton","intent","Intent","PRIMARY","GitHubLink_GitHubLink","connect","ownProps","setItem","_callee2","dispatch","getState","_getState$blynk$toObj2","_context2","toObject","request","first","_x3","_x4","isEmptyString","str","WidgetLabel","information","emptyHide","defaultProps","pinValueSelector","pinId","isNaN","widgetDataStreamsHistorySelector","createCachedSelector","dataStreamsHistory","dataStream","decodeBlynkColor","blynkColor","color","gradient","ButtonView","pressed","handleMouseDown","blynkWSClient","sendWritePin","handleMouseUp","isButtonActive","width","height","isStyledButton","buttonActive","borderRadius","backgroundColor","margin","Math","min","border","WidgetLabel_WidgetLabel","buttonContainer","dist_index_esm","_cn","defineProperty","styledButton","active","onMouseDown","onMouseUp","style","getButtonStyle","renderButtonLabel","SliderView","handleChange","fakeUpdate","handleRelease","vertical","sliderValue","max","slider","labelRenderer","onChange","onRelease","NumericalDisplayView","dangerouslySetInnerHTML","__html","fontSize","textAlign","colorRange","valueProportion","d3","getWidgetValueColor","renderValue","UnknownView","DataStreamsChart","prevProps","prevState","snapshot","disabledItems","renderChart","dataStreams","chartDataStreams","idx","colors","chartDataStream","colorGradient","showAxis","strokeWidth","showDots","scaleDomain","scaleRange","showXAxis","TimeseriesMultiChart","containerRef","chartDuration","showTimeAxis","_this$props3","ref","ChartLegend","handleClickItem","e","onClickItem","currentTarget","dataset","onClick","data-idx","ChartControl","handleSelectDuration","onChangeDuration","duration","buttonGroup","minWidth","data-duration","small","EnhancedGraphView","historyIsReady","hiddenDataStreams","handleChangeDuration","dataStreamsChart","setChartDuration","handleClickLegendItem","itemId","toConsumableArray","_getHistory","getPinHistory","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","Symbol","iterator","done","return","finish","getHistory","ChartLegend_ChartLegend","ChartControl_ChartControl","DataStreamsChart_DataStreamsChart","controlBlockRef","legendBlockRef","spinner","renderLoading","_ref7","_ref8","_callee3","_getState$blynk$toObj3","res","processData","_context3","toUpperCase","responseType","sent","Promise","resolve","reject","reader","FileReader","onload","csv","pako","ungzip","to","item","readAsArrayBuffer","body","_x5","_x6","RgbView","handleChangeColor","pin1Id","pin2Id","pin3Id","rgb","r","g","b","pin1Value","pin2Value","pin3Value","chroma","hex","lib_default","opacity","TwoAxisJoystickView","handleStartDrag","handleDrag","deltaX","deltaY","rX","getMiddleX","rY","getMiddleY","distance","sqrt","floor","handleStop","pinIdx","_middleX","getMiddleValue","_middleY","areaSize","moreSize","stickSize","x","y","react_draggable","onStart","onDrag","onStop","left","top","transform","Scrollbar","renderThumb","assign","scrollRef","react_custom_scrollbars_lib","renderThumbHorizontal","renderThumbVertical","TerminalView","inputValue","lastOwnChange","handleSendInput","handleChangeInput","handleKeyPress","keyCode","which","pinWriteHistory","scrollComponent","scrollToBottom","historyItem","size","terminalInputOn","Scrollbar_Scrollbar","generateHistoryOutput","placeholder","onKeyPress","rightElement","minimal","VerticalSliderView","_SliderView","LcdDisplayView","value1","value2","GaugeChart","append","attr","radius","thickness","arc","cornerRadius","innerRadius","outerRadius","startAngle","PI","endAngle","frontLine","sin","cos","redraw","fillFactor","select","html","GaugeView","GaugeView_GaugeChart_GaugeChart","LevelChart","flipAxis","LevelView","isVertical","LevelView_LevelChart_LevelChart","StepView","step","isSendStep","isLoopOn","direction","sendRepeatAction","sendValue","_cn2","defaultLabel","data-direction","getButtonLabel","LedView","cx","cy","stroke","fillOpacity","TabsView","handleClickTab","setActiveTabId","data-tab-id","EmptyView","MapView","lat","lon","L","mapContainerRef","setView","tileLayer","addTo","marker","ImageView","imageUrl","imgWidth","imgHeight","src","alt","TextInputView","context","handleChangeValue","blur","handleBlur","isNumberInput","handleConfirmButtonClick","handleClickPlusMinus","resultValue","leftElement","suffix","data-action","onBlur","leftIcon","SegmentedControlView","handleClick","fontWeight","data-value","WIDGET_VIEW_COMPONENTS","BUTTON","STYLED_BUTTON","SLIDER","VERTICAL_SLIDER","RGB","TWO_AXIS_JOYSTICK","ENHANCED_GRAPH","DIGIT4_DISPLAY","LABELED_VALUE_DISPLAY","GAUGE","LCD","LEVEL_DISPLAY","VERTICAL_LEVEL_DISPLAY","TERMINAL","STEP","VERTICAL_STEP","LED","TABS","NOTIFICATION","TWITTER","RTC","MAP","IMAGE","TEXT_INPUT","NUMBER_INPUT","SEGMENTED_CONTROL","Widget","ViewComponent","renderContent","ProjectPage","handleLogout","logout","handleChangeAutoSync","setAutoSyncValue","handleSync","_componentDidMount","getProject","widgets","ProjectPage_Widget_Widget","_this$props4","isDarkTheme","bp3-dark","DANGER","renderWidgets","_getState$blynk$toObj","processWidgetPin","widgetPinBlock","widgetPins","widgetDataStreams","widgetDataStream","init","addEventListener","setSyncTimerInterval","_x2","Root","store","react_redux_es","HashRouter","Route","exact","path","Redirect","FocusStyleManager","onlyShowFocusOnTabs","document","querySelector","ReactDOM","Root_Root","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2a26ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3wnYp\",\"octicon\":\"styles_octicon__BDyek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"styles_buttonsContainer__22lNr\",\"verticalButtonsContainer\":\"styles_verticalButtonsContainer__3LUsw\",\"dividerVertical\":\"styles_dividerVertical__2il0m\",\"dividerHorizontal\":\"styles_dividerHorizontal__28Bgx\",\"button\":\"styles_button__3Ha7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backLine\":\"styles_backLine__3SIN8\",\"value\":\"styles_value__1CjlU\",\"minMaxLabel\":\"styles_minMaxLabel__20qmx\",\"minLabel\":\"styles_minLabel__1_Ev6\",\"maxLabel\":\"styles_maxLabel__J4ocL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsContainer\":\"styles_tabsContainer__3kLiq\",\"tab\":\"styles_tab__2M3Wv\",\"tabsInner\":\"styles_tabsInner__w2iKw\",\"activeTab\":\"styles_activeTab__2Z3oI\",\"tabList\":\"styles_tabList__3gTaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stickContainer\":\"styles_stickContainer__eSqQx\",\"sizeContainer\":\"styles_sizeContainer__wUCpz\",\"mainContainer\":\"styles_mainContainer__14Tlp\",\"stick\":\"styles_stick__1y1-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__uUist\",\"controlButton\":\"styles_controlButton__2svv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"styles_legend__1msOG\",\"legendItem\":\"styles_legendItem__2n36n\",\"legendCell\":\"styles_legendCell__3K0eC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"styles_value__wMD90\",\"line\":\"styles_line__3UCuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outputContainer\":\"styles_outputContainer__28JKI\",\"output\":\"styles_output__2ix2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backLine\":\"styles_backLine__1xSXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ledContainer\":\"styles_ledContainer__1YeRe\",\"ledCircle\":\"styles_ledCircle__1hB4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3scRY\",\"emptyFiller\":\"styles_emptyFiller__2DgnJ\",\"form\":\"styles_form__2Hy5B\",\"form-appear\":\"styles_form-appear__25GrX\",\"title\":\"styles_title__13IrG\",\"error\":\"styles_error__pdPhD\",\"connectionProblem\":\"styles_connectionProblem__3lBrk\",\"tokensInput\":\"styles_tokensInput__1XHW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__gqiwA\",\"workspace\":\"styles_workspace__37uq_\",\"workspaceInner\":\"styles_workspaceInner__BWWnv\",\"header\":\"styles_header__Bux46\",\"headerInner\":\"styles_headerInner__AfvU2\",\"headerTitle\":\"styles_headerTitle__3pbBo\",\"headerControls\":\"styles_headerControls__2oeCF\",\"headerDelimiter\":\"styles_headerDelimiter__2QEge\",\"widgetsArea\":\"styles_widgetsArea__1W9v4\",\"selectAutoSync\":\"styles_selectAutoSync__3FnDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__19KCy\",\"tabsRoot\":\"styles_tabsRoot__FO1Tf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"styles_sliderContainer__2xz7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"styles_value__3-ofr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartContainer\":\"styles_chartContainer__3DJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"styles_control__1r5Xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPickerContainer\":\"styles_colorPickerContainer__2B8Y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"styles_thumb__1PYEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__1cFvQ\",\"chart\":\"styles_chart__2VlIB\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__ut_ua\",\"widgetLabel\":\"styles_widgetLabel__3C3ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__2yRSd\",\"chart\":\"styles_chart__2Ufze\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__37M62\",\"widgetLabel\":\"styles_widgetLabel__2KUi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"styles_map__3VOHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"styles_imageContainer__3GD6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ZhTj\"};","// closest polyfill\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(css) {\n        let node = this;\n\n        while (node) {\n            if (node.matches(css)) {\n                return node;\n            }\n\n            node = node.parentElement;\n        }\n        return null;\n    };\n}\n\n// matches polyfill\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector;\n}\n","export const UPDATE_SETTINGS = 'app/settings/UPDATE_SETTINGS';\n","import * as Immutable from 'immutable';\nimport { UPDATE_SETTINGS } from './actionTypes';\n\nconst initialState = Immutable.fromJS({});\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case UPDATE_SETTINGS: {\n            const { settings } = action;\n\n            return state.merge(settings);\n        }\n        default:\n            return state;\n    }\n}\n","import reducer from './reducer';\n\nexport default reducer;\n","export const SET_CONNECTION_PARAMS = 'app/blynk/SET_CONNECTION_PARAMS';\nexport const SET_PROJECT = 'app/blynk/SET_PROJECT';\nexport const SET_PIN_VALUE = 'app/blynk/SET_PIN_VALUE';\nexport const SET_PIN_HISTORY = 'app/blynk/SET_PIN_HISTORY';\nexport const SET_TOKEN = 'app/blynk/SET_TOKEN';\nexport const LOGOUT = 'app/blynk/LOGOUT';\nexport const SET_ACTIVE_TAB_ID = 'app/blynk/SET_ACTIVE_TAB_ID';\nexport const SET_AUTO_SYNC = 'app/blynk/SET_AUTO_SYNC';\n","import * as Immutable from 'immutable';\nimport {\n    SET_CONNECTION_PARAMS,\n    SET_PROJECT,\n    SET_PIN_VALUE,\n    SET_PIN_HISTORY,\n    LOGOUT,\n    SET_ACTIVE_TAB_ID,\n    SET_AUTO_SYNC,\n} from './actionTypes';\n\nconst defaultTokens = (localStorage.getItem('blynk-web-client:tokens') || '').split(',');\nconst defaultServerHost = localStorage.getItem('blynk-web-client:serverHost') || 'blynk-cloud.com';\nconst defaultPort = Number(localStorage.getItem('blynk-web-client:serverPort')) || 8080;\nconst defaultConnectionMode = localStorage.getItem('blynk-web-client:connectionMode') || 'no-ssl';\nconst defaultAutoSync = Number(localStorage.getItem('blynk-web-client:autoSync')) || 0;\n\nconst initialState = Immutable.fromJS({\n    tokens: defaultTokens,\n    serverHost: defaultServerHost,\n    serverPort: defaultPort,\n    connectionMode: defaultConnectionMode,\n\n    autoSync: defaultAutoSync,\n\n    activeTabId: 0,\n\n    project: null,\n\n    devices: {},\n});\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case SET_CONNECTION_PARAMS: {\n            const { tokens, serverHost, serverPort, connectionMode } = action;\n            return state\n                .set('tokens', tokens)\n                .set('serverHost', serverHost)\n                .set('serverPort', serverPort)\n                .set('connectionMode', connectionMode);\n        }\n        case LOGOUT: {\n            return state\n                .set('tokens', new Immutable.List())\n                .set('activeTabId', 0)\n                .set('project', null)\n                .set('pins', new Immutable.Map())\n                .set('pinsHistory', new Immutable.Map())\n                .set('pinsWriteHistory', new Immutable.Map())\n                .set('devices', new Immutable.Map());\n        }\n        case SET_ACTIVE_TAB_ID: {\n            const { tabId } = action;\n            return state.set('activeTabId', tabId);\n        }\n        case SET_PROJECT: {\n            const { project, devices } = action;\n\n            return state.set('project', project).set('devices', devices);\n        }\n        case SET_PIN_VALUE: {\n            const { deviceId, pin, value } = action;\n\n            let device = state.getIn(['devices', deviceId]);\n\n            device = device.setIn(['pins', pin], value);\n\n            // Write value to pinsWriteHistory\n            // TODO This is very bad idea to store history like that!\n            // let pinWriteHistory = device.getIn(['pinsWriteHistory', pin], new Immutable.List());\n            // pinWriteHistory = pinWriteHistory.push(value);\n            // device = device.setIn(['pinsWriteHistory', pin], pinWriteHistory);\n\n            return state.setIn(['devices', deviceId], device);\n        }\n        case SET_PIN_HISTORY: {\n            const { deviceId, pin, history } = action;\n\n            let device = state.getIn(['devices', deviceId]);\n            device = device.setIn(['pinsHistory', pin], history);\n\n            return state.setIn(['devices', deviceId], device);\n        }\n        case SET_AUTO_SYNC: {\n            const { value } = action;\n\n            return state.set('autoSync', value);\n        }\n        default:\n            return state;\n    }\n}\n","import reducer from './reducer';\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport settings from './settings';\nimport blynk from './blynk';\n\nexport default combineReducers({\n    settings,\n    blynk,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules';\n\nconst configureStore = () => {\n    const initialState = {};\n    const enhancers = [];\n    const middleware = [thunk];\n\n    if (process.env.NODE_ENV !== 'production') {\n        const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n        if (typeof devToolsExtension === 'function') {\n            enhancers.push(devToolsExtension());\n        }\n    }\n\n    const composedEnhancers = compose(\n        applyMiddleware(...middleware),\n        ...enhancers,\n    );\n\n    const store = createStore(rootReducer, initialState, composedEnhancers);\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./modules', () => {\n                store.replaceReducer(rootReducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","import * as Immutable from 'immutable';\n\nexport function listToMap(list, keyField = 'id') {\n    let result = new Immutable.Map();\n    list.forEach(listItem => {\n        result = result.set(listItem.get(keyField), listItem);\n    });\n    return result;\n}\n","import repeat from '@avinlab/repeat';\nimport throttle from 'lodash/throttle';\n\nconst MsgType = {\n    RESPONSE: 0,\n    LOGIN: 2,\n    PING: 6,\n    TWEET: 12,\n    EMAIL: 13,\n    NOTIFY: 14,\n    BRIDGE: 15,\n    HW_SYNC: 16,\n    HW_INFO: 17,\n    HARDWARE: 20,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst MsgStatus = {\n    OK: 200,\n    ILLEGAL_COMMAND: 2,\n    NO_ACTIVE_DASHBOARD: 8,\n    INVALID_TOKEN: 9,\n    ILLEGAL_COMMAND_BODY: 11,\n};\n\nfunction getCommandByString(cmdString) {\n    switch (cmdString) {\n        case 'ping':\n            return MsgType.PING;\n        case 'login':\n            return MsgType.LOGIN;\n        case 'hardware':\n            return MsgType.HARDWARE;\n        case 'bridge':\n            return MsgType.BRIDGE;\n        case 'hwSync':\n            return MsgType.HW_SYNC;\n        default:\n    }\n}\n\nfunction getStringByCommandCode(cmd) {\n    switch (cmd) {\n        case 0:\n            return 'RESPONSE';\n        case 20:\n            return 'HARDWARE';\n        default:\n    }\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction getStatusByCode(statusCode) {\n    switch (statusCode) {\n        case 200:\n            return 'OK';\n        case 2:\n            return 'ILLEGAL_COMMAND';\n        case 8:\n            return 'NO_ACTIVE_DASHBOARD';\n        case 9:\n            return 'INVALID_TOKEN';\n        case 11:\n            return 'ILLEGAL_COMMAND_BODY';\n        default:\n    }\n}\n\n/**\n * ArrayBuffer to string\n * @param buf\n * @returns {string}\n */\nfunction ab2str(buf) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n}\n\nclass EventHandler {\n    constructor() {\n        this._events = {};\n    }\n\n    addEventListener(event, action) {\n        this._events[event] = this._events[event] || [];\n        if (!this._events[event].includes(action)) {\n            this._events[event].push(action);\n        }\n    }\n\n    removeEventListener(event, action) {\n        this._events[event] = this._events[event] || [];\n        this._events[event] = this._events[event].filter(i => i !== action);\n    }\n\n    dispatchEvent(event, details) {\n        this._events[event] = this._events[event] || [];\n        this._events[event].forEach(eventHandler => {\n            eventHandler(details);\n        });\n    }\n}\n\nclass BlynkWSClient extends EventHandler {\n    isRunning = false; // WS Connection status\n    socket = null; // WS Socket\n    pingTimer = null; // Internal ping timer\n    token = null; // Blynk auth token\n    debugging = false;\n\n    /**\n     * Init Blynk WS connection\n     * @param token\n     * @param serverHost\n     * @param serverPort\n     * @param connectionMode\n     */\n    init({ token, serverHost, serverPort, connectionMode }) {\n        this.stop();\n        this.token = token;\n\n        this.socket = new WebSocket(\n            `${connectionMode === 'no-ssl' ? 'ws' : 'wss'}://${serverHost}:${serverPort}/websockets`,\n        );\n        this.socket.binaryType = 'arraybuffer';\n\n        this.socket.onmessage = this.handleWSMessage;\n        this.socket.onopen = event => {\n            this.start();\n            this.debugging && console.info('WS: Connected');\n        };\n        this.socket.onclose = event => {\n            this.stop();\n            this.debugging && console.info('WS: Disconnected');\n        };\n        this.socket.onerror = event => {\n            console.warn('WS: Error');\n        };\n\n        this.syncTimer = repeat({\n            action: () => {\n                this.sync();\n            },\n            delay: 1000,\n            skipFirst: false,\n        });\n    }\n\n    start() {\n        if (this.isRunning) {\n            return;\n        }\n        this.isRunning = true;\n\n        this.send(`login ${this.token}`);\n\n        this.send(`bridge 9999 i ${this.token}`);\n\n        this.pingTimer = repeat({\n            action: () => {\n                this.send('ping');\n            },\n            delay: 1000 * 2,\n            firstTimeDelay: 1000 * 2,\n            skipFirst: true,\n        });\n        this.pingTimer.start();\n    }\n\n    setSyncTimerInterval(interval) {\n        if (!interval) {\n            this.syncTimer.stop();\n        } else {\n            this.syncTimer.updateDelay(interval);\n            this.syncTimer.stop();\n            this.syncTimer.start();\n        }\n    }\n\n    sync() {\n        this.send(`hwSync`);\n    }\n\n    stop() {\n        if (!this.isRunning) {\n            return;\n        }\n\n        this.isRunning = false;\n        this.pingTimer.stop();\n        this.socket.close();\n    }\n\n    handleWSMessage = event => {\n        if (event.data instanceof ArrayBuffer) {\n            const bufArray = event.data;\n\n            const dataView = new DataView(bufArray);\n            const msgCommand = dataView.getInt8(0);\n\n            switch (msgCommand) {\n                case MsgType.RESPONSE: {\n                    this.debugging && console.info(this.messageToDebugString(bufArray));\n\n                    break;\n                }\n                case MsgType.HARDWARE: {\n                    this.handleHardwareMessage(ab2str(bufArray.slice(5)));\n                    break;\n                }\n                default:\n            }\n        } else {\n            console.warn(`WS: Unexpected type : ${event.data}`);\n        }\n    };\n\n    messageToDebugString(bufArray) {\n        const dataView = new DataView(bufArray);\n        const cmdString = getStringByCommandCode(dataView.getInt8(0));\n        const msgId = dataView.getUint16(1);\n        const responseCode = getStatusByCode(dataView.getUint16(3));\n        return `Command : ${cmdString}, msgId : ${msgId}, responseCode : ${responseCode}`;\n    }\n\n    /**\n     * Send event `write-pin` to subscribers\n     * @param pin\n     * @param value\n     */\n    dispatchWritePin(pin, value) {\n        this.dispatchEvent('write-pin', {\n            pin: `${pin}`,\n            value,\n        });\n    }\n\n    /**\n     * Send value to pin\n     * @param pin\n     * @param value\n     * @param dontSend\n     */\n    sendWritePin(pin, value, dontSend = false) {\n        const pinType = pin[0];\n        const pinNumber = pin.slice(1);\n\n        if (!dontSend) {\n            this.throttleSend(pin)(`bridge 9999 ${pinType}w ${pinNumber} ${value}`);\n        }\n\n        this.dispatchWritePin(pin, value);\n    }\n\n    _throttleSendFunctions = {};\n    throttleSend = pin => {\n        this._throttleSendFunctions[pin] = this._throttleSendFunctions[pin] || throttle(this.send.bind(this), 100);\n        return this._throttleSendFunctions[pin];\n    };\n\n    handleHardwareMessage(data) {\n        const [type, pin, value] = data.split(String.fromCharCode(0));\n        switch (type) {\n            case 'vw': {\n                // write virtual pin\n                this.dispatchWritePin(`v${pin}`, value);\n                break;\n            }\n            case 'aw': {\n                // write analog pin\n                this.dispatchWritePin(`a${pin}`, value);\n                break;\n            }\n            case 'dw': {\n                // write digital pin\n                this.dispatchWritePin(`d${pin}`, value);\n                break;\n            }\n            default:\n        }\n    }\n\n    send(data) {\n        if (!this.isRunning) {\n            return;\n        }\n        if (this.socket.readyState !== WebSocket.OPEN) {\n            return;\n        }\n\n        const commandAndBody = data.split(' ');\n        const message = this.createMessage(commandAndBody);\n\n        this.debugging && console.info(`WS sending : ${data}`);\n\n        this.socket.send(message);\n    }\n\n    createMessage(commandAndBody) {\n        const cmdString = commandAndBody[0];\n        const cmdBody = commandAndBody.length > 1 ? commandAndBody.slice(1).join('\\0') : null;\n        const cmd = getCommandByString(cmdString);\n        return this.buildBlynkMessage(cmd, 1, cmdBody);\n    }\n\n    buildBlynkMessage(cmd, msgId, cmdBody) {\n        const BLYNK_HEADER_SIZE = 5;\n        const bodyLength = cmdBody ? cmdBody.length : 0;\n        const bufArray = new ArrayBuffer(BLYNK_HEADER_SIZE + bodyLength);\n        const dataView = new DataView(bufArray);\n        dataView.setInt8(0, cmd);\n        dataView.setInt16(1, msgId);\n        dataView.setInt16(3, bodyLength);\n        if (bodyLength > 0) {\n            for (let i = 0, offset = 5; i < cmdBody.length; i += 1, offset += 1) {\n                dataView.setInt8(offset, cmdBody.charCodeAt(i));\n            }\n        }\n        return new Uint8Array(bufArray);\n    }\n}\n\nclass BlynkWSMultiClient {\n    _clients = {};\n\n    getBlynkWSClient = deviceId => {\n        if (!this._clients[String(deviceId)]) {\n            this._clients[String(deviceId)] = new BlynkWSClient();\n        }\n        return this._clients[String(deviceId)];\n    };\n}\n\nconst blynkWSMultiClient = new BlynkWSMultiClient();\n\nexport default blynkWSMultiClient.getBlynkWSClient;\n","export function getHttpBlynkUrl({ token, serverHost, serverPort, connectionMode }) {\n    return `${connectionMode === 'no-ssl' ? 'http' : 'https'}://${serverHost}:${serverPort}/${token}`;\n}\n","import escape from 'lodash/escape';\nimport escapeRegExp from 'lodash/escapeRegExp';\n\nexport function getWidgetPinAddress(widget) {\n    if (widget.get('pin') === -1) {\n        return -1;\n    }\n    return widget.get('pinType')[0].toLowerCase() + widget.get('pin');\n}\n\nexport function makeValueSpan(valueStr) {\n    return `<span class=\"pinValue\">${escape(valueStr)}</span>`;\n}\n\nexport function formatValueString(value, valueFormatting, pinExpression = 'pin') {\n    if (!valueFormatting) {\n        return `<span class=\"pinValue\">${escape(value)}</span>`;\n    }\n\n    return valueFormatting.replace(new RegExp(`/${escapeRegExp(pinExpression)}([.]?([#]*))/`), function(g1, g2, g3) {\n        let result;\n        if (g2) {\n            result = parseFloat(Number(value).toFixed(g3.length));\n        } else {\n            result = value;\n        }\n        return makeValueSpan(String(result));\n    });\n}\n","import request from 'superagent';\nimport * as Immutable from 'immutable';\nimport pako from 'pako';\nimport * as d3 from 'd3';\nimport {\n    SET_CONNECTION_PARAMS,\n    SET_PIN_VALUE,\n    SET_PROJECT,\n    SET_PIN_HISTORY,\n    LOGOUT,\n    SET_ACTIVE_TAB_ID,\n    SET_AUTO_SYNC,\n} from './actionTypes';\nimport { listToMap } from '../../../utils/immutable';\nimport blynkWSClient from '../../../common/blynkWSClient';\nimport { getHttpBlynkUrl } from '../../../utils/connection';\nimport { getWidgetPinAddress } from '../../../utils/data';\n\n/**\n * Setup connection options\n * @param token\n * @param serverHost\n * @param serverPort\n * @param connectionMode\n * @returns {{type: string, serverPort: *, serverHost: *, token: *}}\n */\nexport function setConnectionParams({ tokens, serverHost, serverPort, connectionMode }) {\n    // Save base options to localstorage\n    localStorage.setItem('blynk-web-client:tokens', tokens.join(','));\n    localStorage.setItem('blynk-web-client:serverHost', serverHost);\n    localStorage.setItem('blynk-web-client:serverPort', serverPort);\n    localStorage.setItem('blynk-web-client:connectionMode', connectionMode);\n\n    return {\n        type: SET_CONNECTION_PARAMS,\n        tokens,\n        serverHost,\n        serverPort,\n        connectionMode,\n    };\n}\n\nexport function logout() {\n    return (dispatch, getState) => {\n        localStorage.setItem('blynk-web-client:tokens', '');\n\n        getState()\n            .blynk.get('devices')\n            .forEach(device => {\n                blynkWSClient(device.get('id')).stop();\n            });\n\n        dispatch({\n            type: LOGOUT,\n        });\n    };\n}\n\n/**\n * Get active blynk project\n * @returns {Function}\n */\nexport function getProject() {\n    return async (dispatch, getState) => {\n        const { tokens, serverHost, serverPort, connectionMode, autoSync } = getState().blynk.toObject();\n\n        let { body: project } = await request\n            .get(`${getHttpBlynkUrl({ token: tokens.first(), serverHost, serverPort, connectionMode })}/project`)\n            .set('accept', 'json');\n\n        project = Immutable.fromJS(project);\n        let devices = project.get('devices');\n        devices = devices.map((device, idx) => {\n            return device\n                .set('token', tokens.get(idx))\n                .set('pins', new Immutable.Map())\n                .set('pinsHistory', new Immutable.Map())\n                .set('pinsWriteHistory', new Immutable.Map());\n        });\n\n        devices = listToMap(devices, 'id');\n\n        project = project.set('widgets', listToMap(project.get('widgets'), 'id'));\n\n        let widgets = project.get('widgets');\n\n        const processWidgetPin = (widgetPinBlock, deviceId) => {\n            const pin = widgetPinBlock.get('pin', -1);\n            const value = widgetPinBlock.get('value');\n            if (pin !== -1) {\n                const pinId = getWidgetPinAddress(widgetPinBlock);\n                widgetPinBlock = widgetPinBlock.set('pinId', pinId);\n\n                if (value !== undefined) {\n                    devices = devices.setIn([deviceId, 'pins', pinId], value);\n                }\n            }\n            return widgetPinBlock;\n        };\n\n        // Prepare pin ids and get exist pins values\n        widgets = widgets.map(widget => {\n            widget = processWidgetPin(widget, widget.get('deviceId'));\n\n            let widgetPins = widget.get('pins');\n            if (widgetPins) {\n                widgetPins = widgetPins.map(widgetPinBlock => {\n                    return processWidgetPin(widgetPinBlock, widget.get('deviceId'));\n                });\n                widget = widget.set('pins', widgetPins);\n            }\n\n            let widgetDataStreams = widget.get('dataStreams');\n            if (widgetDataStreams) {\n                widgetDataStreams = widgetDataStreams.map(widgetDataStream =>\n                    widgetDataStream.set('pin', processWidgetPin(widgetDataStream.get('pin'), widget.get('deviceId'))),\n                );\n                widget = widget.set('dataStreams', widgetDataStreams);\n            }\n\n            return widget;\n        });\n\n        project = project.set('widgets', widgets);\n\n        devices.forEach(device => {\n            const token = device.get('token');\n            const deviceId = device.get('id');\n\n            // Connect to blynk ws server\n            blynkWSClient(deviceId).init({\n                token,\n                serverHost,\n                serverPort,\n                connectionMode,\n            });\n            blynkWSClient(deviceId).addEventListener('write-pin', ({ pin, value }) => {\n                dispatch(setPinValue({ deviceId, pin, value }));\n            });\n            blynkWSClient(deviceId).setSyncTimerInterval(autoSync);\n        });\n\n        dispatch({\n            type: SET_PROJECT,\n            project,\n            devices,\n        });\n    };\n}\n\n/**\n * Test connection with blynk server\n * @returns {Function}\n */\nexport function testConnection() {\n    return async (dispatch, getState) => {\n        const { tokens, serverHost, serverPort, connectionMode } = getState().blynk.toObject();\n\n        await request\n            .get(`${getHttpBlynkUrl({ token: tokens.first(), serverHost, serverPort, connectionMode })}/isAppConnected`)\n            .set('accept', 'json');\n    };\n}\n\n/**\n * Set pin value\n * @param deviceId\n * @param pin - pin label\n * @param value - pin value\n * @returns {{pin: *, type: string, value: *}}\n */\nexport function setPinValue({ deviceId, pin, value }) {\n    return {\n        type: SET_PIN_VALUE,\n        deviceId,\n        pin,\n        value,\n    };\n}\n\n/**\n * Load pin history from server\n * @param pin\n * @param deviceId\n * @returns {Function}\n */\nexport function getPinHistory({ deviceId, pin }) {\n    return async (dispatch, getState) => {\n        const { serverHost, serverPort, connectionMode } = getState().blynk.toObject();\n\n        const token = getState().blynk.getIn(['devices', deviceId, 'token']);\n\n        try {\n            const res = await request\n                .get(\n                    `${getHttpBlynkUrl({\n                        token,\n                        serverHost,\n                        serverPort,\n                        connectionMode,\n                    })}/data/${pin.toUpperCase()}`,\n                )\n                .responseType('blob');\n\n            const processData = data =>\n                new Promise((resolve, reject) => {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        const csv = pako.ungzip(reader.result, { to: 'string' });\n                        const history = d3.csvParseRows(csv).map(item => [Number(item[1]), Number(item[0])]);\n                        dispatch({\n                            type: SET_PIN_HISTORY,\n                            deviceId,\n                            pin,\n                            history,\n                        });\n                        resolve();\n                    };\n                    reader.readAsArrayBuffer(data);\n                });\n            await processData(res.body);\n        } catch (e) {\n            dispatch({\n                type: SET_PIN_HISTORY,\n                deviceId,\n                pin,\n                history: [],\n            });\n        }\n    };\n}\n\n/**\n * Set active tab\n * @param tabId\n * @returns {{tabId: *, type: string}}\n */\nexport function setActiveTabId(tabId) {\n    return {\n        type: SET_ACTIVE_TAB_ID,\n        tabId,\n    };\n}\n\n/**\n * Set auto sync timer delay for all ws clients\n * @param value\n * @returns {Function}\n */\nexport function setAutoSyncValue(value) {\n    localStorage.setItem('blynk-web-client:autoSync', value);\n    return (dispatch, getState) => {\n        const devices = getState().blynk.get('devices');\n\n        devices.forEach(device => {\n            const deviceId = device.get('id');\n            blynkWSClient(deviceId).setSyncTimerInterval(value);\n        });\n\n        dispatch({\n            type: SET_AUTO_SYNC,\n            value,\n        });\n    };\n}\n\n/**\n * Sync HW pins for all devices\n * @returns {Function}\n */\nexport function sync() {\n    return (dispatch, getState) => {\n        const devices = getState().blynk.get('devices');\n\n        devices.forEach(device => {\n            const deviceId = device.get('id');\n            blynkWSClient(deviceId).sync();\n        });\n    };\n}\n","export const required = value => (value ? undefined : 'Field cannot be empty');\n","/* eslint-disable max-len */\nimport React from 'react';\nimport styles from './styles.module.scss';\n\nexport default class GitHubLink extends React.Component {\n    render() {\n        return (\n            <div className={styles.main}>\n                <a href=\"https://github.com/avin/blynk-web-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                        />\n                    </svg>\n                </a>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport cn from 'clsx';\nimport { Button, FormGroup, HTMLSelect, InputGroup, Intent, TextArea } from '@blueprintjs/core';\nimport * as Immutable from 'immutable';\nimport trim from 'lodash/trim';\nimport { setConnectionParams, testConnection } from '../../../redux/modules/blynk/actions';\nimport styles from './styles.module.scss';\nimport { required } from '../../../utils/validation';\nimport GitHubLink from './GitHubLink/GitHubLink';\n\nconst ErrorString = meta => (meta.error && meta.touched ? <div className={styles.error}>{meta.error}</div> : null);\n\nconst InputGroupField = ({ input, meta, ...props }) => (\n    <>\n        <InputGroup {...{ ...input, ...props }} />\n        <ErrorString {...meta} />\n    </>\n);\n\nconst TextAreaField = ({ input, meta, ...props }) => (\n    <>\n        <TextArea {...{ ...input, ...props }} />\n        <ErrorString {...meta} />\n    </>\n);\n\nconst HTMLSelectField = ({ input, meta, ...props }) => <HTMLSelect {...{ ...input, ...props }} />;\n\nexport class ConnectionPage extends React.Component {\n    state = {\n        busy: false,\n        connectionError: null,\n    };\n\n    handleSubmit = async params => {\n        const { setConnectionParams, history, testConnection } = this.props;\n\n        const tokens = params.tokens\n            .split(/[\\r]?\\n/)\n            .map(i => trim(i))\n            .filter(i => i);\n\n        setConnectionParams({\n            tokens: Immutable.fromJS(tokens),\n            serverHost: params.serverHost,\n            serverPort: params.serverPort,\n            connectionMode: params.connectionMode,\n        });\n\n        this.setState({ busy: true });\n        try {\n            await testConnection();\n\n            history.push('project');\n        } catch (e) {\n            const error = e.response ? e.response.text : e.message;\n            this.setState({ busy: false, connectionError: error });\n        }\n    };\n\n    render() {\n        const { busy, connectionError } = this.state;\n        const { tokens, serverHost, serverPort, connectionMode } = this.props;\n\n        return (\n            <div className={cn('bp3-dark', styles.main)}>\n                <div className={styles.emptyFiller} />\n                <Form\n                    onSubmit={this.handleSubmit}\n                    initialValues={{\n                        tokens: tokens.join('\\n'),\n                        serverHost,\n                        serverPort,\n                        connectionMode,\n                    }}\n                    render={({ handleSubmit }) => (\n                        <form onSubmit={handleSubmit} className={cn('bp3-card', styles.form)}>\n                            <div className={styles.title}>Blynk Web-Client</div>\n                            <FormGroup\n                                label=\"Project's authentication tokens\"\n                                labelFor=\"tokens-input\"\n                                helperText=\"Paste here all auth tokens of your project\"\n                            >\n                                <Field\n                                    name=\"tokens\"\n                                    id=\"tokens-input\"\n                                    component={TextAreaField}\n                                    validate={required}\n                                    className={styles.tokensInput}\n                                />\n                            </FormGroup>\n\n                            <FormGroup label=\"Connection mode\" labelFor=\"connectionMode-input\">\n                                <Field\n                                    name=\"connectionMode\"\n                                    id=\"connectionMode-input\"\n                                    component={HTMLSelectField}\n                                    fill\n                                    options={[{ label: 'No SSL', value: 'no-ssl' }, { label: 'SSL', value: 'ssl' }]}\n                                />\n                            </FormGroup>\n\n                            <FormGroup label=\"Server Host\" labelFor=\"serverHost-input\">\n                                <Field\n                                    name=\"serverHost\"\n                                    id=\"serverHost-input\"\n                                    component={InputGroupField}\n                                    validate={required}\n                                />\n                            </FormGroup>\n\n                            <FormGroup label=\"Server Port\" labelFor=\"serverPort-input\">\n                                <Field\n                                    name=\"serverPort\"\n                                    id=\"serverPort-input\"\n                                    component={InputGroupField}\n                                    validate={required}\n                                />\n                            </FormGroup>\n\n                            <Button\n                                type=\"submit\"\n                                disabled={busy}\n                                icon=\"log-in\"\n                                fill\n                                className={styles.submitButton}\n                                intent={Intent.PRIMARY}\n                            >\n                                {busy ? 'Connecting...' : 'Connect'}\n                            </Button>\n\n                            {connectionError && (\n                                <div className={styles.connectionProblem}>\n                                    Connection to server problem ({connectionError})\n                                </div>\n                            )}\n                        </form>\n                    )}\n                />\n\n                <GitHubLink />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        tokens: state.blynk.get('tokens'),\n        serverHost: state.blynk.get('serverHost'),\n        serverPort: state.blynk.get('serverPort'),\n        connectionMode: state.blynk.get('connectionMode'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        setConnectionParams,\n        testConnection,\n    },\n)(ConnectionPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\n\nconst isEmptyString = str => str === '' || str === undefined;\n\nexport default class WidgetLabel extends React.Component {\n    static propTypes = {\n        title: PropTypes.node,\n        information: PropTypes.node,\n        emptyHide: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        emptyHide: true,\n    };\n\n    render() {\n        const { title, information, emptyHide } = this.props;\n\n        if (isEmptyString(title) && isEmptyString(information) && emptyHide) {\n            return <div />;\n        }\n\n        return (\n            <div className={styles.root}>\n                <div className={styles.title}>{title}</div>\n                <div className={styles.information}>{information}</div>\n            </div>\n        );\n    }\n}\n","import createCachedSelector from 're-reselect';\nimport * as Immutable from 'immutable';\n\nexport const pinValueSelector = (state, deviceId, pinId) => {\n    let value = state.blynk.getIn(['devices', deviceId, 'pins', pinId]);\n    if (value && !isNaN(value)) {\n        value = parseFloat(Number(value).toFixed(2));\n    }\n    return value;\n};\n\nexport const widgetDataStreamsHistorySelector = createCachedSelector(\n    (state, widget) => widget,\n    state => state.blynk.getIn(['devices']),\n    (widget, devices) => {\n        const dataStreamsHistory = [];\n        widget.get('dataStreams', new Immutable.List()).forEach(dataStream => {\n            const deviceId = dataStream.get('targetId');\n            const pinId = dataStream.getIn(['pin', 'pinId']);\n            dataStreamsHistory.push(devices.getIn([deviceId, 'pinsHistory', pinId]));\n        });\n\n        return dataStreamsHistory;\n    },\n)((state, widget) => widget.get('id'));\n","import * as d3 from 'd3';\n\nexport function decodeBlynkColor(blynkColor, gradient = false) {\n    let color;\n    switch (blynkColor) {\n        case 600084223: // Green\n            color = '#23C48E';\n            break;\n        case 1602017535: // Purple\n            color = '#5F7CD8';\n            break;\n        case 79755519: // Blue\n            color = '#04C0F8';\n            break;\n        case -308477697: // Orange\n            color = '#ED9D00';\n            break;\n        case -750560001: // Red\n            color = '#D3435C';\n            break;\n        case -1: // White\n            color = '#FFFFFF';\n            break;\n        case 255: // Black\n            color = '#293742';\n            break;\n        default:\n            color = '#999';\n    }\n\n    if (!gradient) {\n        return color;\n    }\n\n    switch (blynkColor) {\n        case 2147483647: // Green/Red\n            color = ['#D3435C', '#ED9D00', '#23C48E'];\n            break;\n        case -2147483648: // Green/Blue\n            color = ['#5F7CD8', '#04C0F8', '#23C48E'];\n            break;\n        case 2147483646: // Red/Green\n            color = ['#23C48E', '#ED9D00', '#D3435C'];\n            break;\n        case -2147483647: // Blue/Green\n            color = ['#23C48E', '#04C0F8', '#5F7CD8'];\n            break;\n\n        default:\n            color = [color, color];\n    }\n\n    return color;\n}\n\nexport function numToCssColor(num) {\n    const color = parseColor(num);\n    if (color[0] === 0 && color[1] === 0 && color[2] === 0) {\n        return undefined;\n    }\n    return `rgba(${color.join(', ')})`;\n}\n\nfunction convertARGBtoRGBA(color) {\n    const a = (color & 0xff000000) >> 24;\n    const r = (color & 0x00ff0000) >> 16;\n    const g = (color & 0x0000ff00) >> 8;\n    const b = color & 0x000000ff;\n\n    return [r, g, b, a & 0xff];\n}\n\nfunction setAlphaComponent(color, alpha) {\n    return (color & 0x00ffffff) | (alpha << 24);\n}\n\nfunction parseColor(value) {\n    const decodedColor = Number(value);\n    return convertARGBtoRGBA(setAlphaComponent(decodedColor, 255));\n}\n\nexport function getWidgetValueColor(widget, value) {\n    const colorRange = decodeBlynkColor(widget.get('color'), true);\n    const valueProportion = (value - widget.get('min')) / widget.get('max') - widget.get('min');\n    if (isNaN(valueProportion)) {\n        return colorRange[colorRange.length - 1];\n    }\n    return d3.interpolateRgbBasis(colorRange)(valueProportion);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@blueprintjs/core';\nimport SizeMe from '@avinlab/react-size-me';\nimport cn from 'clsx';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport { decodeBlynkColor } from '../../../../../../utils/color';\n\nexport class ButtonView extends React.Component {\n    state = {\n        pressed: false,\n    };\n\n    renderButtonLabel() {\n        const { widget } = this.props;\n\n        if (this.isButtonActive()) {\n            return widget.get('onLabel') || widget.getIn(['onButtonState', 'text']) || 'ON';\n        }\n        return widget.get('offLabel') || widget.getIn(['offButtonState', 'text']) || 'OFF';\n    }\n\n    handleMouseDown = () => {\n        const { widget, value } = this.props;\n\n        this.setState({\n            pressed: true,\n        });\n\n        const pin = getWidgetPinAddress(widget);\n\n        if (pin !== -1) {\n            if (widget.get('pushMode')) {\n                // If push mode\n                blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('max'));\n            } else {\n                // If switch mode\n                // eslint-disable-next-line no-lonely-if\n                if (String(value) === String(widget.get('max'))) {\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('min'));\n                } else {\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('max'));\n                }\n            }\n        }\n    };\n\n    handleMouseUp = () => {\n        const { widget } = this.props;\n\n        this.setState({\n            pressed: false,\n        });\n\n        const pin = getWidgetPinAddress(widget);\n\n        if (pin !== -1 && widget.get('pushMode')) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('min'));\n        }\n    };\n\n    getButtonStyle({ width, height, isStyledButton }) {\n        const { widget } = this.props;\n\n        const buttonActive = this.isButtonActive();\n\n        if (isStyledButton) {\n            let borderRadius;\n            switch (widget.get('edge')) {\n                case 'SHARP':\n                    borderRadius = 0;\n                    break;\n                case 'ROUNDED':\n                    borderRadius = 3;\n                    break;\n                case 'PILL':\n                    borderRadius = height / 2;\n                    break;\n                default:\n            }\n\n            return {\n                width,\n                height,\n                borderRadius,\n                backgroundColor: buttonActive\n                    ? decodeBlynkColor(widget.getIn(['onButtonState', 'backgroundColor']))\n                    : decodeBlynkColor(widget.getIn(['offButtonState', 'backgroundColor'])),\n\n                color: buttonActive\n                    ? decodeBlynkColor(widget.getIn(['onButtonState', 'textColor']))\n                    : decodeBlynkColor(widget.getIn(['offButtonState', 'textColor'])),\n            };\n        }\n\n        return {\n            margin: 2,\n            width: (Math.min(width, height) * widget.get('width')) / 2 - 4,\n            height: Math.min(width, height) - 4,\n            border: `2px solid ${decodeBlynkColor(widget.get('color'))}`,\n            color: this.isButtonActive()\n                ? decodeBlynkColor(widget.get('color') !== -1 ? -1 : 255)\n                : decodeBlynkColor(widget.get('color')),\n            backgroundColor: this.isButtonActive() ? decodeBlynkColor(widget.get('color')) : decodeBlynkColor(255),\n        };\n    }\n\n    isButtonActive() {\n        const { pressed } = this.state;\n        const { widget, value } = this.props;\n\n        return String(value) === String(widget.get('max')) || pressed;\n    }\n\n    render() {\n        const { widget } = this.props;\n\n        const isStyledButton = widget.get('type') === 'STYLED_BUTTON';\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || (isStyledButton ? '' : 'Button')} />\n                <div className={styles.buttonContainer}>\n                    <SizeMe className={styles.sizeContainer}>\n                        {({ width, height }) => (\n                            <Button\n                                className={cn({\n                                    [styles.button]: !isStyledButton,\n                                    [styles.styledButton]: isStyledButton,\n                                })}\n                                active={this.isButtonActive()}\n                                onMouseDown={this.handleMouseDown}\n                                onMouseUp={this.handleMouseUp}\n                                style={this.getButtonStyle({ width, height, isStyledButton })}\n                            >\n                                {this.renderButtonLabel()}\n                            </Button>\n                        )}\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const pinId = ownProps.widget.get('pinId');\n    const deviceId = ownProps.widget.get('deviceId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(ButtonView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider } from '@blueprintjs/core';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport styles from './styles.module.scss';\n\nexport class SliderView extends React.Component {\n    handleChange = value => {\n        const { widget } = this.props;\n\n        const pin = getWidgetPinAddress(widget);\n        const fakeUpdate = widget.get('sendOnReleaseOn');\n        blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value, fakeUpdate);\n    };\n\n    handleRelease = value => {\n        const { widget } = this.props;\n\n        if (widget.get('sendOnReleaseOn')) {\n            const pin = getWidgetPinAddress(widget);\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value);\n        }\n    };\n\n    render() {\n        const { widget, value, vertical } = this.props;\n\n        const sliderValue = Math.max(Math.min(Number(value), widget.get('max')), widget.get('min'));\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || (!vertical && 'Slider')} information={value} />\n                <div className={styles.sliderContainer}>\n                    <Slider\n                        value={sliderValue}\n                        labelRenderer={false}\n                        min={widget.get('min')}\n                        max={widget.get('max')}\n                        onChange={this.handleChange}\n                        onRelease={this.handleRelease}\n                        vertical={vertical}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(SliderView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './styles.module.scss';\nimport { getWidgetValueColor } from '../../../../../../utils/color';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport { formatValueString } from '../../../../../../utils/data';\n\nexport class NumericalDisplayView extends React.Component {\n    renderValue() {\n        const { value, widget } = this.props;\n\n        return (\n            <span\n                dangerouslySetInnerHTML={{\n                    __html: formatValueString(value, widget.get('valueFormatting')),\n                }}\n            />\n        );\n    }\n\n    render() {\n        const { widget, value } = this.props;\n\n        let fontSize;\n        if (widget.get('fontSize') === 'LARGE') {\n            fontSize = `20px`;\n        } else if (widget.get('fontSize') === 'SMALL') {\n            fontSize = `14px`;\n        }\n\n        let textAlign;\n        if (widget.get('textAlignment') === 'MIDDLE') {\n            textAlign = 'center';\n        } else if (widget.get('textAlignment') === 'RIGHT') {\n            textAlign = 'right';\n        }\n\n        const color = getWidgetValueColor(widget, value);\n\n        return (\n            <div>\n                <div className=\"label\">{widget.get('label')}</div>\n                <div className={styles.value} style={{ textAlign, color, fontSize }}>\n                    {this.renderValue()}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(NumericalDisplayView);\n","import React from 'react';\n\nexport default class UnknownView extends React.Component {\n    render() {\n        const { widget } = this.props;\n        return (\n            <div>\n                <b>UNKNOWN!</b> {widget.get('type')}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Immutable from 'immutable';\nimport TimeseriesMultiChart from '@avinlab/d3-timeseries-multi-chart';\nimport styles from './styles.module.scss';\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\n\nexport default class DataStreamsChart extends React.Component {\n    static propTypes = {\n        showXAxis: PropTypes.bool,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        controlBlockRef: PropTypes.instanceOf(Element),\n        legendBlockRef: PropTypes.instanceOf(Element),\n        dataStreams: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.instanceOf(Immutable.Iterable)]),\n        dataStreamsHistory: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.instanceOf(Immutable.Iterable)])\n            .isRequired,\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.disabledItems !== this.props.disabledItems) {\n            this.renderChart();\n        }\n    }\n\n    renderChart() {\n        const { dataStreams, dataStreamsHistory, disabledItems } = this.props;\n\n        const chartDataStreams = [];\n        dataStreams.forEach((dataStream, idx) => {\n            let type;\n            switch (dataStream.get('graphType')) {\n                case 'LINE':\n                    type = 'line';\n                    break;\n                case 'BAR':\n                    type = 'bar';\n                    break;\n                case 'FILLED_LINE':\n                    type = 'area';\n                    break;\n                default:\n                    type = 'line';\n            }\n\n            if (!disabledItems.includes(idx)) {\n                const colors = decodeBlynkColor(dataStream.get('color'), true);\n\n                const chartDataStream = {\n                    label: dataStream.get('title'),\n                    color: colors[0],\n                    colorGradient: colors,\n                    data: dataStreamsHistory[idx],\n                    showAxis: dataStream.get('showYAxis'),\n                    strokeWidth: 1,\n                    showDots: type === 'bar',\n                    type,\n                };\n\n                switch (dataStream.get('yAxisScale')) {\n                    case 'MINMAX': {\n                        chartDataStream.scaleDomain = [dataStream.get('yAxisMin', 0), dataStream.get('yAxisMax', 0)];\n                        break;\n                    }\n                    case 'HEIGHT': {\n                        chartDataStream.scaleRange = [\n                            100 - dataStream.get('yAxisMax', 100),\n                            100 - dataStream.get('yAxisMin', 0),\n                        ];\n                        break;\n                    }\n                    case 'DELTA': {\n                        // TODO\n                        break;\n                    }\n                    default:\n                }\n\n                chartDataStreams.push(chartDataStream);\n            }\n        });\n\n        this.chart.render(chartDataStreams);\n    }\n\n    componentDidMount() {\n        const { width, height, showXAxis } = this.props;\n        this.chart = new TimeseriesMultiChart({\n            target: this.containerRef,\n            chartDuration: 3600 * 24000,\n            width,\n            height,\n            showTimeAxis: true || showXAxis,\n        });\n        this.renderChart();\n    }\n\n    render() {\n        const { width, height } = this.props;\n\n        return (\n            <div\n                className={styles.chartContainer}\n                style={{ width, height }}\n                ref={i => {\n                    this.containerRef = i;\n                }}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\n\nexport default class ChartLegend extends React.Component {\n    static propTypes = {\n        dataStreams: PropTypes.any,\n    };\n\n    handleClickItem = e => {\n        const { onClickItem } = this.props;\n        const { idx } = e.currentTarget.dataset;\n        onClickItem(Number(idx));\n    };\n\n    render() {\n        const { dataStreams, disabledItems } = this.props;\n\n        return (\n            <div className={styles.legend}>\n                {dataStreams.map((dataStream, idx) => {\n                    const color = decodeBlynkColor(dataStream.get('color'), true);\n\n                    return (\n                        <div key={idx} className={styles.legendItem} onClick={this.handleClickItem} data-idx={idx}>\n                            <div\n                                className={styles.legendCell}\n                                style={{\n                                    backgroundColor: disabledItems.includes(idx) ? undefined : color[0],\n                                    border: `1px solid ${color[0]}`,\n                                }}\n                            />\n                            {dataStream.get('title')}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Button, ButtonGroup } from '@blueprintjs/core';\nimport styles from './styles.module.scss';\n\nexport default class ChartControl extends React.Component {\n    handleSelectDuration = e => {\n        const { onChangeDuration } = this.props;\n        onChangeDuration(Number(e.currentTarget.dataset.duration));\n    };\n\n    render() {\n        return (\n            <div className={styles.control}>\n                <ButtonGroup style={{ minWidth: 150 }} fill>\n                    {[\n                        ['1h', 3600 * 1000],\n                        ['6h', 3600 * 1000 * 6],\n                        ['12h', 3600 * 1000 * 12],\n                        ['1d', 3600 * 1000 * 24],\n                        ['3d', 3600 * 1000 * 24 * 3],\n                    ].map(([label, duration]) => (\n                        <Button key={label} onClick={this.handleSelectDuration} data-duration={duration} small>\n                            {label}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from '@blueprintjs/core';\nimport SizeMe from '@avinlab/react-size-me';\nimport * as Immutable from 'immutable';\nimport { getPinHistory } from '../../../../../../redux/modules/blynk/actions';\nimport { widgetDataStreamsHistorySelector } from '../../../../../../redux/selectors';\nimport styles from './styles.module.scss';\nimport DataStreamsChart from './DataStreamsChart/DataStreamsChart';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport ChartLegend from './ChartLegend/ChartLegend';\nimport ChartControl from './ChartControl/ChartControl';\n\nexport class EnhancedGraphView extends React.Component {\n    state = {\n        historyIsReady: false,\n        hiddenDataStreams: [],\n    };\n\n    async getHistory() {\n        const { widget, getPinHistory } = this.props;\n\n        for (const dataStream of widget.get('dataStreams', new Immutable.List())) {\n            const pinId = dataStream.getIn(['pin', 'pinId']);\n            await getPinHistory({ deviceId: dataStream.get('targetId'), pin: pinId });\n        }\n\n        this.setState({\n            historyIsReady: true,\n        });\n    }\n\n    componentDidMount() {\n        this.getHistory();\n    }\n\n    handleChangeDuration = duration => {\n        if (this.dataStreamsChart && this.dataStreamsChart.chart) {\n            this.dataStreamsChart.chart.setChartDuration(duration);\n        }\n    };\n\n    handleClickLegendItem = itemId => {\n        let { hiddenDataStreams } = this.state;\n        if (hiddenDataStreams.includes(itemId)) {\n            hiddenDataStreams = hiddenDataStreams.filter(i => i !== itemId);\n        } else {\n            hiddenDataStreams = [...hiddenDataStreams, itemId];\n        }\n        this.setState({ hiddenDataStreams });\n    };\n\n    renderChart() {\n        const { widget, dataStreamsHistory } = this.props;\n        const { hiddenDataStreams } = this.state;\n\n        const showXAxis = widget.get('xAxisValues');\n\n        if (!widget.get('dataStreams')) {\n            return <div>Empty chart</div>;\n        }\n\n        return (\n            <>\n                <div className={styles.header}>\n                    <ChartLegend\n                        dataStreams={widget.get('dataStreams')}\n                        onClickItem={this.handleClickLegendItem}\n                        disabledItems={hiddenDataStreams}\n                    />\n                    <ChartControl onChangeDuration={this.handleChangeDuration} />\n                </div>\n                <div className={styles.chart}>\n                    <SizeMe>\n                        {({ width, height }) =>\n                            !!height && (\n                                <DataStreamsChart\n                                    dataStreams={widget.get('dataStreams')}\n                                    dataStreamsHistory={dataStreamsHistory}\n                                    controlBlockRef={this.controlBlockRef}\n                                    legendBlockRef={this.legendBlockRef}\n                                    showXAxis={showXAxis}\n                                    width={width}\n                                    height={height}\n                                    disabledItems={hiddenDataStreams}\n                                    ref={i => {\n                                        this.dataStreamsChart = i;\n                                    }}\n                                />\n                            )\n                        }\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n\n    renderLoading() {\n        return (\n            <div className={styles.loading}>\n                <Spinner />\n            </div>\n        );\n    }\n\n    render() {\n        const { historyIsReady } = this.state;\n        const { widget } = this.props;\n\n        return (\n            <>\n                <WidgetLabel\n                    title={\n                        <div className={styles.widgetLabelContainer}>\n                            <span className={styles.widgetLabel}>{widget.get('label')}</span>\n                            <div\n                                ref={i => {\n                                    this.legendBlockRef = i;\n                                }}\n                            />\n                        </div>\n                    }\n                    information={\n                        <div\n                            ref={i => {\n                                this.controlBlockRef = i;\n                            }}\n                        />\n                    }\n                    emptyHide={false}\n                />\n                {historyIsReady ? this.renderChart() : this.renderLoading()}\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        dataStreamsHistory: widgetDataStreamsHistorySelector(state, ownProps.widget),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        getPinHistory,\n    },\n)(EnhancedGraphView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ColorPicker from 'coloreact';\nimport chroma from 'chroma-js';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\n\nexport class RgbView extends React.Component {\n    handleChangeColor = color => {\n        const { widget } = this.props;\n\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\n        const pin3Id = widget.getIn(['pins', 2, 'pinId']);\n\n        if (pin1Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin1Id, color.rgb.r);\n        }\n        if (pin2Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin2Id, color.rgb.g);\n        }\n        if (pin3Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin3Id, color.rgb.b);\n        }\n    };\n\n    render() {\n        const { widget, pin1Value, pin2Value, pin3Value } = this.props;\n\n        const color = chroma([pin1Value, pin2Value, pin3Value]).hex();\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || 'Zergba'} />\n                <div className={styles.colorPickerContainer}>\n                    <ColorPicker opacity={false} color={color} onChange={this.handleChangeColor} />\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\n    const pin3Id = ownProps.widget.getIn(['pins', 2, 'pinId']);\n\n    return {\n        pin1Value: pinValueSelector(state, deviceId, pin1Id),\n        pin2Value: pinValueSelector(state, deviceId, pin2Id),\n        pin3Value: pinValueSelector(state, deviceId, pin3Id),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(RgbView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SizeMe from '@avinlab/react-size-me';\nimport { Button } from '@blueprintjs/core';\nimport { DraggableCore } from 'react-draggable';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { decodeBlynkColor } from '../../../../../../utils/color';\n\nexport class TwoAxisJoystickView extends React.Component {\n    handleStartDrag = () => {};\n\n    handleDrag = (e, { deltaX, deltaY }) => {\n        const { widget, pin1Value, pin2Value } = this.props;\n\n        const x = ((-this.getMiddleX() + Number(pin1Value)) / this.getMiddleX()) * this.margin;\n        const y = ((-this.getMiddleY() + Number(pin2Value)) / this.getMiddleY()) * this.margin * -1;\n\n        let rX = x + deltaX;\n        let rY = y + deltaY;\n\n        rX = Math.max(Math.min(rX, this.margin), -this.margin);\n        rY = Math.max(Math.min(rY, this.margin), -this.margin);\n\n        const distance = Math.sqrt(rX * rX + rY * rY);\n        if (distance > this.margin) {\n            rX *= this.margin / distance;\n            rY *= this.margin / distance;\n        }\n\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\n\n        if (pin1Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(\n                pin1Id,\n                Math.floor(this.getMiddleX() + (rX / this.margin) * this.getMiddleX()),\n            );\n        }\n        if (pin2Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(\n                pin2Id,\n                Math.floor(this.getMiddleY() - (rY / this.margin) * this.getMiddleY()),\n            );\n        }\n    };\n\n    handleStop = () => {\n        const { widget } = this.props;\n\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\n\n        if (pin1Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin1Id, this.getMiddleX());\n        }\n        if (pin2Id !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin2Id, this.getMiddleY());\n        }\n    };\n\n    getMiddleValue(pinIdx) {\n        const { widget } = this.props;\n        return (widget.getIn(['pins', pinIdx, 'max']) - widget.getIn(['pins', pinIdx, 'min']) + 1) / 2;\n    }\n\n    getMiddleX() {\n        this._middleX = this._middleX !== undefined ? this._middleX : this.getMiddleValue(0);\n        return this._middleX;\n    }\n\n    getMiddleY() {\n        this._middleY = this._middleY !== undefined ? this._middleY : this.getMiddleValue(1);\n        return this._middleY;\n    }\n\n    render() {\n        const { widget, pin1Value, pin2Value } = this.props;\n\n        return (\n            <>\n                <WidgetLabel\n                    title={widget.get('label') || 'Joystick'}\n                    information={\n                        <div>\n                            {pin1Value}\n                            <br />\n                            {pin2Value}\n                        </div>\n                    }\n                />\n                <div className={styles.mainContainer}>\n                    <SizeMe className={styles.sizeContainer}>\n                        {({ width, height }) => {\n                            const moreSize = 20;\n                            const areaSize = Math.min(width, height) - moreSize * 2;\n                            const stickSize = areaSize / 2;\n                            const margin = stickSize / 2;\n\n                            this.margin = margin;\n\n                            const x = ((-this.getMiddleX() + Number(pin1Value)) / this.getMiddleX()) * this.margin;\n                            const y = ((-this.getMiddleY() + Number(pin2Value)) / this.getMiddleY()) * this.margin * -1;\n\n                            return (\n                                <div\n                                    className={styles.stickContainer}\n                                    style={{ width: areaSize, height: areaSize, margin: moreSize }}\n                                >\n                                    <DraggableCore\n                                        onStart={this.handleStartDrag}\n                                        onDrag={this.handleDrag}\n                                        onStop={this.handleStop}\n                                    >\n                                        <Button\n                                            className={styles.stick}\n                                            style={{\n                                                width: stickSize + moreSize * 2,\n                                                height: stickSize + moreSize * 2,\n                                                left: margin - moreSize,\n                                                top: margin - moreSize,\n                                                transform: `translate(${x}px, ${y}px)`,\n                                                backgroundColor: decodeBlynkColor(widget.get('color')),\n                                                border: `5px solid white`,\n                                            }}\n                                        />\n                                    </DraggableCore>\n                                </div>\n                            );\n                        }}\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\n\n    return {\n        pin1Value: pinValueSelector(state, deviceId, pin1Id),\n        pin2Value: pinValueSelector(state, deviceId, pin2Id),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(TwoAxisJoystickView);\n","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\n\nexport default class Scrollbar extends Component {\n    static defaultProps = {\n        scrollRef: () => {},\n    };\n\n    renderThumb = ({ className, style, ...props }) => {\n        return <div className={cn(className, styles.thumb)} style={style} {...props} />;\n    };\n\n    render() {\n        const { scrollRef, ...props } = this.props;\n\n        return (\n            <Scrollbars\n                renderThumbHorizontal={this.renderThumb}\n                renderThumbVertical={this.renderThumb}\n                ref={i => scrollRef(i)}\n                {...props}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, InputGroup } from '@blueprintjs/core';\nimport cn from 'clsx';\nimport SizeMe from '@avinlab/react-size-me';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport styles from './styles.module.scss';\nimport Scrollbar from '../../../../Scrollbar/Scrollbar';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\n\nexport class TerminalView extends React.Component {\n    state = {\n        inputValue: '',\n    };\n\n    lastOwnChange = false;\n\n    handleSendInput = () => {\n        const { widget } = this.props;\n        const { inputValue } = this.state;\n\n        const pin = getWidgetPinAddress(widget);\n        if (pin !== -1) {\n            this.lastOwnChange = true;\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, inputValue);\n        }\n\n        this.setState({ inputValue: '' });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.pinWriteHistory !== this.props.pinWriteHistory) {\n            if (this.props.widget.get('autoScrollOn')) {\n                this.scrollComponent.scrollToBottom();\n            }\n        }\n    }\n\n    handleChangeInput = e => {\n        const inputValue = e.currentTarget.value;\n        this.setState({ inputValue });\n    };\n\n    handleKeyPress = e => {\n        const keyCode = e.keyCode ? e.keyCode : e.which;\n        if (keyCode === 13) {\n            this.handleSendInput();\n\n            return false;\n        }\n    };\n\n    generateHistoryOutput() {\n        const { pinWriteHistory, widget } = this.props;\n        let output = '';\n        if (pinWriteHistory) {\n            pinWriteHistory.forEach((historyItem, idx) => {\n                if (this.lastOwnChange && idx === pinWriteHistory.size - 1) {\n                    output += '> ';\n                    this.lastOwnChange = false;\n                }\n                output += historyItem;\n                if (widget.get('attachNewLine')) {\n                    output += '\\r\\n';\n                }\n            });\n        }\n        return output;\n    }\n\n    render() {\n        const { widget } = this.props;\n        const { inputValue } = this.state;\n        const terminalInputOn = widget.get('terminalInputOn');\n\n        return (\n            <>\n                <div className={styles.outputContainer}>\n                    <SizeMe>\n                        {({ width, height }) => (\n                            <Scrollbar\n                                style={{ height, width }}\n                                scrollRef={i => {\n                                    this.scrollComponent = i;\n                                }}\n                            >\n                                <pre className={cn('bp3-code-block', styles.output)}>\n                                    {this.generateHistoryOutput()}\n                                    !!! TERMINAL OUTPUT IS UNDER CONSTRUCTION !!!\n                                </pre>\n                            </Scrollbar>\n                        )}\n                    </SizeMe>\n                </div>\n                {terminalInputOn && (\n                    <InputGroup\n                        placeholder=\"Type here\"\n                        value={inputValue}\n                        onChange={this.handleChangeInput}\n                        onKeyPress={this.handleKeyPress}\n                        rightElement={<Button icon=\"key-enter\" minimal={true} onClick={this.handleSendInput} />}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n        pinWriteHistory: state.blynk.getIn(['devices', deviceId, 'pinsWriteHistory', pinId]),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(TerminalView);\n","import { connect } from 'react-redux';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\n\nimport { SliderView } from '../SliderView/SliderView';\n\nexport class VerticalSliderView extends SliderView {\n    static defaultProps = {\n        vertical: true,\n    };\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(VerticalSliderView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport { formatValueString } from '../../../../../../utils/data';\n\nexport class LcdDisplayView extends React.Component {\n    renderValue(pinIdx) {\n        const { value1, value2, widget } = this.props;\n\n        const value = pinIdx === 1 ? value1 : value2;\n\n        return (\n            <span\n                dangerouslySetInnerHTML={{\n                    __html: formatValueString(value, widget.get(`textFormatLine${pinIdx}`), `pin${pinIdx}`),\n                }}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={styles.value}>\n                    <div className={styles.line}>{this.renderValue(1)}</div>\n                    <div className={styles.line}>{this.renderValue(2)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\n    return {\n        value1: pinValueSelector(state, deviceId, pin1Id),\n        value2: pinValueSelector(state, deviceId, pin2Id),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(LcdDisplayView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\nimport { formatValueString } from '../../../../../../../utils/data';\n\nexport class GaugeChart extends React.Component {\n    static propTypes = {\n        min: PropTypes.number.isRequired,\n        max: PropTypes.number.isRequired,\n        value: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        color: PropTypes.number,\n    };\n\n    renderChart() {\n        const { width, height, min, max, color } = this.props;\n\n        const svg = d3\n            .select(this.containerRef)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height);\n\n        const chart = svg.append('g').attr('transform', `translate(${width / 2}, ${height / 1.5})`);\n\n        const thickness = 20;\n        const radius = Math.min(width, height) / 1.5 - thickness / 2;\n\n        const arc = d3.arc().cornerRadius(thickness / 2);\n\n        chart\n            .append('path')\n            .attr('class', cn('backLine', styles.backLine))\n            .attr(\n                'd',\n                arc({\n                    innerRadius: radius - thickness,\n                    outerRadius: radius,\n                    startAngle: -Math.PI / 1.5,\n                    endAngle: Math.PI / 1.5,\n                }),\n            );\n        chart\n            .append('path')\n            .attr('class', cn('frontLine', styles.frontLine))\n            .attr('fill', decodeBlynkColor(color));\n        chart\n            .append('foreignObject')\n            .attr('width', radius)\n            .attr('height', 50)\n            .attr('x', -radius / 2)\n            .attr('y', -25)\n            .append('xhtml:div')\n            .attr('class', cn('value', styles.value))\n            .style('color', decodeBlynkColor(color));\n\n        chart\n            .append('text')\n            .attr('class', cn('minLabel', styles.minLabel))\n            .attr('x', radius * Math.sin(-Math.PI / 1.5) + thickness)\n            .attr('y', radius * Math.cos(-Math.PI / 1.5) * -1 - 5)\n            .text(min);\n        chart\n            .append('text')\n            .attr('class', cn('maxLabel', styles.maxLabel))\n            .attr('x', radius * Math.sin(Math.PI / 1.5) - thickness)\n            .attr('y', radius * Math.cos(Math.PI / 1.5) * -1 - 5)\n            .text(max);\n\n        this.redraw = () => {\n            const { min, max, value, valueFormatting } = this.props;\n            const fillFactor = value / (max - min);\n\n            chart\n                .select('.frontLine')\n                .attr('opacity', fillFactor ? 1 : 0)\n                .attr(\n                    'd',\n                    arc({\n                        innerRadius: radius - thickness,\n                        outerRadius: radius,\n                        startAngle: -Math.PI / 1.5,\n                        endAngle: Math.PI / 1.5 - Math.PI * (1.33 * (1 - fillFactor)),\n                    }),\n                );\n\n            chart.select('.value').html(formatValueString(value, valueFormatting));\n        };\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.renderChart();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw && this.redraw();\n    }\n\n    render() {\n        return (\n            <div\n                ref={i => {\n                    this.containerRef = i;\n                }}\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(GaugeChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SizeMe from '@avinlab/react-size-me';\nimport styles from './styles.module.scss';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport GaugeChart from './GaugeChart/GaugeChart';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\n\nexport class GaugeView extends React.Component {\n    render() {\n        const { widget, value } = this.props;\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || 'Gauge'} />\n                <div className={styles.chart}>\n                    <SizeMe>\n                        {({ width, height }) =>\n                            !!height && (\n                                <GaugeChart\n                                    width={width}\n                                    height={height}\n                                    min={widget.get('min')}\n                                    max={widget.get('max')}\n                                    value={Number(value) || 0}\n                                    valueFormatting={widget.get('valueFormatting')}\n                                    color={widget.get('color')}\n                                />\n                            )\n                        }\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const pinId = ownProps.widget.get('pinId');\n    const deviceId = ownProps.widget.get('deviceId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(GaugeView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\n\nexport class LevelChart extends React.Component {\n    static propTypes = {\n        min: PropTypes.number.isRequired,\n        max: PropTypes.number.isRequired,\n        value: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        vertical: PropTypes.bool,\n        flipAxis: PropTypes.bool,\n        color: PropTypes.number,\n    };\n\n    renderChart() {\n        const { width, height, color } = this.props;\n\n        const svg = d3\n            .select(this.containerRef)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height);\n\n        const chart = svg.append('g');\n\n        chart\n            .append('rect')\n            .attr('class', cn('backLine', styles.backLine))\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('rx', 3)\n            .attr('ry', 3)\n            .attr('width', width)\n            .attr('height', height);\n        chart\n            .append('rect')\n            .attr('class', cn('frontLine', styles.frontLine))\n            .attr('rx', 3)\n            .attr('ry', 3)\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('fill', decodeBlynkColor(color));\n\n        this.redraw = () => {\n            const { min, max, value, height, width, vertical, flipAxis } = this.props;\n            const fillFactor = value / (max - min);\n\n            const frontLine = chart.select('.frontLine').attr('opacity', fillFactor ? 1 : 0);\n\n            if (vertical) {\n                frontLine.attr('height', Math.max(fillFactor * height, 0)).attr('width', width);\n                if (!flipAxis) {\n                    frontLine.attr('y', Math.max(height - fillFactor * height, 0));\n                }\n            } else {\n                frontLine.attr('width', Math.max(fillFactor * width, 0)).attr('height', height);\n                if (flipAxis) {\n                    frontLine.attr('x', Math.max(width - fillFactor * width, 0));\n                }\n            }\n        };\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.renderChart();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw && this.redraw();\n    }\n\n    render() {\n        return (\n            <div\n                ref={i => {\n                    this.containerRef = i;\n                }}\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(LevelChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SizeMe from '@avinlab/react-size-me';\nimport styles from './styles.module.scss';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport LevelChart from './LevelChart/LevelChart';\n\nexport class LevelView extends React.Component {\n    render() {\n        const { widget, value } = this.props;\n        const isVertical = widget.get('type') === 'VERTICAL_LEVEL_DISPLAY';\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || (isVertical ? '' : 'Level')} information={value} />\n                <div className={styles.chart}>\n                    <SizeMe>\n                        {({ width, height }) =>\n                            !!height && (\n                                <LevelChart\n                                    width={width}\n                                    height={height}\n                                    min={widget.get('min')}\n                                    max={widget.get('max')}\n                                    value={Number(value)}\n                                    valueFormatting={widget.get('valueFormatting')}\n                                    vertical={isVertical}\n                                    flipAxis={widget.get('isAxisFlipOn')}\n                                    color={widget.get('color')}\n                                />\n                            )\n                        }\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(LevelView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@blueprintjs/core';\nimport cn from 'clsx';\nimport repeat from '@avinlab/repeat';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\n\nexport class StepView extends React.Component {\n    getButtonLabel(direction) {\n        const { widget } = this.props;\n\n        if (!widget.get('isArrowsOn')) {\n            if (direction === -1) {\n                return '←';\n            }\n            return '→';\n        }\n\n        if (direction === -1) {\n            return '-';\n        }\n        return '+';\n    }\n\n    handleMouseDown = e => {\n        const { widget } = this.props;\n        const step = widget.get('step');\n        const isSendStep = widget.get('isSendStep');\n        const isLoopOn = widget.get('isLoopOn');\n        const max = widget.get('max');\n        const min = widget.get('min');\n\n        const pin = getWidgetPinAddress(widget);\n\n        const direction = Number(e.currentTarget.dataset.direction);\n\n        this.sendRepeatAction = repeat({\n            action: () => {\n                const value = Number(this.props.value) || 0;\n\n                let sendValue;\n                if (isSendStep) {\n                    sendValue = step * direction;\n                } else {\n                    sendValue = value + step * direction;\n\n                    if (sendValue > max) {\n                        if (isLoopOn) {\n                            sendValue = min;\n                        } else {\n                            sendValue = max;\n                        }\n                    } else if (sendValue < min) {\n                        if (isLoopOn) {\n                            sendValue = max;\n                        } else {\n                            sendValue = min;\n                        }\n                    }\n                }\n\n                if (pin !== -1) {\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, sendValue);\n                }\n            },\n            delay: 80,\n            firstTimeDelay: 400,\n            skipFirst: false,\n        });\n        this.sendRepeatAction.start();\n    };\n\n    handleMouseUp = e => {\n        if (this.sendRepeatAction) {\n            this.sendRepeatAction.stop();\n        }\n    };\n\n    render() {\n        const { widget, value } = this.props;\n\n        const isVertical = widget.get('type') === 'VERTICAL_STEP';\n\n        const defaultLabel = isVertical ? 'Step V' : 'Step H';\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || defaultLabel} information={value} />\n                <div\n                    className={cn({\n                        [styles.verticalButtonsContainer]: isVertical,\n                        [styles.buttonsContainer]: !isVertical,\n                    })}\n                >\n                    <Button\n                        minimal\n                        small\n                        className={styles.button}\n                        data-direction={isVertical ? 1 : -1}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseUp={this.handleMouseUp}\n                    >\n                        {this.getButtonLabel(isVertical ? 1 : -1)}\n                    </Button>\n                    <div\n                        className={cn({\n                            [styles.dividerHorizontal]: isVertical,\n                            [styles.dividerVertical]: !isVertical,\n                        })}\n                    />\n                    <Button\n                        minimal\n                        small\n                        className={styles.button}\n                        data-direction={isVertical ? -1 : 1}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseUp={this.handleMouseUp}\n                    >\n                        {this.getButtonLabel(isVertical ? -1 : 1)}\n                    </Button>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(StepView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SizeMe from '@avinlab/react-size-me';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport { decodeBlynkColor } from '../../../../../../utils/color';\n\nexport class LedView extends React.Component {\n    render() {\n        const { widget, value } = this.props;\n\n        const color = decodeBlynkColor(widget.get('color'));\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label') || 'Led'} />\n                <div className={styles.ledContainer}>\n                    <SizeMe style={{ textAlign: 'center' }}>\n                        {({ width, height }) => {\n                            const size = Math.min(width, height) || 5;\n                            return (\n                                <svg width={size} height={size}>\n                                    <circle\n                                        r={Math.max(size / 2 - 4, 1)}\n                                        cx={size / 2}\n                                        cy={size / 2}\n                                        className={styles.ledCircle}\n                                        stroke={color}\n                                        fill={color}\n                                        fillOpacity={value / 255}\n                                    />\n                                </svg>\n                            );\n                        }}\n                    </SizeMe>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId) || 0,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(LedView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport SizeMe from '@avinlab/react-size-me';\nimport styles from './styles.module.scss';\nimport { setActiveTabId } from '../../../../../../redux/modules/blynk/actions';\nimport Scrollbar from '../../../../Scrollbar/Scrollbar';\n\nexport class TabsView extends React.Component {\n    handleClickTab = e => {\n        const { setActiveTabId } = this.props;\n        const tabId = Number(e.currentTarget.dataset.tabId);\n        setActiveTabId(tabId);\n    };\n\n    render() {\n        const { widget, activeTabId } = this.props;\n\n        return (\n            <div className={styles.tabsContainer}>\n                <SizeMe>\n                    {({ width, height }) => (\n                        <Scrollbar style={{ width, height }}>\n                            <div className={styles.tabsInner}>\n                                <ul className={styles.tabList}>\n                                    {widget.get('tabs').map((tab, idx) => (\n                                        <li\n                                            key={idx}\n                                            className={cn(styles.tab, { [styles.activeTab]: idx === activeTabId })}\n                                            onClick={this.handleClickTab}\n                                            data-tab-id={idx}\n                                        >\n                                            {tab.get('label') || `Tab ${idx + 1}`}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </Scrollbar>\n                    )}\n                </SizeMe>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        activeTabId: state.blynk.get('activeTabId'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveTabId,\n    },\n)(TabsView);\n","import React from 'react';\n\nexport default class EmptyView extends React.Component {\n    render() {\n        return null;\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport L from 'leaflet';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\n\nexport class MapView extends React.Component {\n    componentDidMount() {\n        const { widget } = this.props;\n        const lat = widget.get('lat');\n        const lon = widget.get('lon');\n        this.map = L.map(this.mapContainerRef).setView([lat, lon], 15);\n        L.tileLayer('https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png').addTo(this.map);\n        L.marker([lat, lon]).addTo(this.map);\n    }\n\n    render() {\n        return (\n            <>\n                <div\n                    className={styles.map}\n                    style={{ height: '100%', width: '100%' }}\n                    ref={i => {\n                        this.mapContainerRef = i;\n                    }}\n                />\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId) || 0,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(MapView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SizeMe from '@avinlab/react-size-me';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\n\nexport class ImageView extends React.Component {\n    render() {\n        const { widget, value } = this.props;\n\n        let imageUrl;\n        if (widget.get('urls')) {\n            if (value >= 1 && value <= widget.get('urls').size) {\n                imageUrl = widget.getIn(['urls', value - 1]);\n            } else {\n                imageUrl = widget.getIn(['urls', 0]);\n            }\n        }\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label')} />\n                <div className={styles.imageContainer}>\n                    {imageUrl && (\n                        <SizeMe>\n                            {({ width, height }) => {\n                                let imgWidth;\n                                let imgHeight;\n                                if (widget.get('scaling') === 'FIT') {\n                                    imgWidth = Math.min(width, height);\n                                    imgHeight = Math.min(width, height);\n                                } else {\n                                    imgWidth = width;\n                                    imgHeight = height;\n                                }\n\n                                return <img src={imageUrl} alt={value} width={imgWidth} height={imgHeight} />;\n                            }}\n                        </SizeMe>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId) || 0,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(ImageView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, InputGroup } from '@blueprintjs/core';\nimport trim from 'lodash/trim';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport styles from './styles.module.scss';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\n\nexport class TextInputView extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            inputValue: props.value,\n        };\n    }\n\n    handleChangeValue = e => {\n        this.setState({\n            inputValue: e.currentTarget.value,\n        });\n    };\n\n    handleKeyPress = e => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            e.currentTarget.blur();\n        }\n    };\n\n    handleBlur = () => {\n        const { widget } = this.props;\n        let { inputValue } = this.state;\n        if (this.isNumberInput) {\n            inputValue = Number(inputValue) || widget.get('min', 0);\n        }\n\n        const pin = getWidgetPinAddress(widget);\n        if (pin !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, inputValue);\n        }\n    };\n\n    handleConfirmButtonClick = e => {\n        e.currentTarget.blur();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.setState({\n                inputValue: this.props.value,\n            });\n        }\n    }\n\n    get isNumberInput() {\n        const { widget } = this.props;\n        return widget.get('type') === 'NUMBER_INPUT';\n    }\n\n    handleClickPlusMinus = e => {\n        const { widget } = this.props;\n        const { action } = e.currentTarget.dataset;\n        const { inputValue } = this.state;\n\n        const step = widget.get('step', 1);\n        const min = widget.get('min', 0);\n        const max = widget.get('max', 0);\n        const isLoopOn = widget.get('isLoopOn', false);\n\n        let resultValue = Number(inputValue) + (action === 'plus' ? +step : -step) || min;\n        if (resultValue > max) {\n            if (isLoopOn) {\n                resultValue = min;\n            } else {\n                resultValue = max;\n            }\n        } else if (resultValue < min) {\n            if (isLoopOn) {\n                resultValue = max;\n            } else {\n                resultValue = min;\n            }\n        }\n\n        this.setState(\n            {\n                inputValue: resultValue,\n            },\n            () => {\n                this.handleBlur();\n            },\n        );\n    };\n\n    render() {\n        const { widget } = this.props;\n        const { inputValue } = this.state;\n        const { isNumberInput } = this;\n\n        const suffix = trim(widget.get('suffix', ''));\n\n        let rightElement;\n        let leftElement;\n        if (isNumberInput) {\n            leftElement = (\n                <Button\n                    icon=\"minus\"\n                    onClick={this.handleClickPlusMinus}\n                    data-action=\"minus\"\n                    className={styles.controlButton}\n                />\n            );\n            rightElement = (\n                <Button\n                    icon=\"plus\"\n                    onClick={this.handleClickPlusMinus}\n                    data-action=\"plus\"\n                    className={styles.controlButton}\n                />\n            );\n        } else {\n            rightElement = (\n                <Button\n                    icon=\"key-enter\"\n                    minimal\n                    onClick={this.handleConfirmButtonClick}\n                    className={styles.controlButton}\n                />\n            );\n        }\n\n        return (\n            <>\n                <WidgetLabel title={trim(widget.get('label', '') + (suffix ? ` (${suffix})` : ''))} />\n                <div className={styles.container}>\n                    <InputGroup\n                        placeholder={widget.get('hint')}\n                        value={inputValue}\n                        onChange={this.handleChangeValue}\n                        onKeyPress={this.handleKeyPress}\n                        onBlur={this.handleBlur}\n                        leftIcon={leftElement}\n                        rightElement={rightElement}\n                        style={{\n                            textAlign: isNumberInput ? 'center' : undefined,\n                        }}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId) || 0,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(TextInputView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from '@blueprintjs/core';\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\nimport { pinValueSelector } from '../../../../../../redux/selectors';\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\nimport { decodeBlynkColor } from '../../../../../../utils/color';\nimport styles from './styles.module.scss';\n\nexport class SegmentedControlView extends React.Component {\n    handleClick = e => {\n        const { widget } = this.props;\n        const { value } = e.currentTarget.dataset;\n\n        const pin = getWidgetPinAddress(widget);\n        if (pin !== -1) {\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value);\n        }\n    };\n\n    render() {\n        const { widget, value } = this.props;\n\n        return (\n            <>\n                <WidgetLabel title={widget.get('label')} />\n                <div className={styles.container}>\n                    <ButtonGroup fill>\n                        {widget.get('labels', []).map((label, idx) => {\n                            const active = Number(value) === idx + 1;\n                            let style;\n                            if (active) {\n                                style = {\n                                    backgroundColor: decodeBlynkColor(widget.get('color')),\n                                    fontWeight: 'bold',\n                                    color: '#182026',\n                                };\n                            }\n\n                            return (\n                                <Button\n                                    key={idx}\n                                    data-value={idx + 1}\n                                    onClick={this.handleClick}\n                                    active={active}\n                                    style={style}\n                                >\n                                    {label}\n                                </Button>\n                            );\n                        })}\n                    </ButtonGroup>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const deviceId = ownProps.widget.get('deviceId');\n    const pinId = ownProps.widget.get('pinId');\n    return {\n        value: pinValueSelector(state, deviceId, pinId) || 0,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(SegmentedControlView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport ButtonView from './Views/ButtonView/ButtonView';\nimport SliderView from './Views/SliderView/SliderView';\nimport NumericalDisplayView from './Views/NumericalDisplayView/NumericalDisplayView';\nimport UnknownView from './Views/UnknownView/UnknownView';\nimport EnhancedGraphView from './Views/EnhancedGraphView/EnhancedGraphView';\nimport RgbView from './Views/RgbView/RgbView';\nimport TwoAxisJoystickView from './Views/TwoAxisJoystickView/TwoAxisJoystickView';\nimport TerminalView from './Views/TerminalView/TerminalView';\nimport VerticalSliderView from './Views/VerticalSliderView/VerticalSliderView';\nimport LcdDisplayView from './Views/LcdDisplayView/LcdDisplayView';\nimport GaugeView from './Views/GaugeView/GaugeView';\nimport LevelView from './Views/LevelView/LevelView';\nimport StepView from './Views/StepView/StepView';\nimport LedView from './Views/LedView/LedView';\nimport TabsView from './Views/TabsView/TabsView';\nimport EmptyView from './Views/EmptyView/EmptyView';\nimport MapView from './Views/MapView/MapView';\nimport ImageView from './Views/ImageView/ImageView';\nimport TextInputView from './Views/TextInputView/TextInputView';\nimport SegmentedControlView from './Views/SegmentedControlView/SegmentedControlView';\n\nconst WIDGET_VIEW_COMPONENTS = {\n    BUTTON: ButtonView,\n    STYLED_BUTTON: ButtonView,\n    SLIDER: SliderView,\n    VERTICAL_SLIDER: VerticalSliderView,\n    RGB: RgbView,\n    TWO_AXIS_JOYSTICK: TwoAxisJoystickView,\n    ENHANCED_GRAPH: EnhancedGraphView,\n    DIGIT4_DISPLAY: NumericalDisplayView,\n    LABELED_VALUE_DISPLAY: NumericalDisplayView,\n    GAUGE: GaugeView,\n    LCD: LcdDisplayView,\n    LEVEL_DISPLAY: LevelView,\n    VERTICAL_LEVEL_DISPLAY: LevelView,\n    TERMINAL: TerminalView,\n    STEP: StepView,\n    VERTICAL_STEP: StepView,\n    LED: LedView,\n    TABS: TabsView,\n    EMAIL: EmptyView,\n    NOTIFICATION: EmptyView,\n    TWITTER: EmptyView,\n    BRIDGE: EmptyView,\n    RTC: EmptyView,\n    MAP: MapView,\n    IMAGE: ImageView,\n    TEXT_INPUT: TextInputView,\n    NUMBER_INPUT: TextInputView,\n    SEGMENTED_CONTROL: SegmentedControlView,\n};\n\nexport class Widget extends React.Component {\n    renderContent() {\n        const { widget } = this.props;\n        const ViewComponent = WIDGET_VIEW_COMPONENTS[widget.get('type')] || UnknownView;\n        return <ViewComponent widget={widget} />;\n    }\n\n    render() {\n        const { widget } = this.props;\n\n        const sizeHeightFactor = 70;\n        const sizeWidthFactor = 60;\n        const margin = 1;\n\n        return (\n            <div\n                className={cn(styles.root, { [styles.tabsRoot]: widget.get('type') === 'TABS' })}\n                style={{\n                    left: widget.get('x') * sizeWidthFactor,\n                    top: widget.get('y') * sizeHeightFactor,\n                    width: widget.get('width') * sizeWidthFactor - margin,\n                    height: widget.get('height') * sizeHeightFactor - margin,\n                }}\n            >\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Widget);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport { Button, HTMLSelect, Intent } from '@blueprintjs/core';\nimport SizeMe from '@avinlab/react-size-me';\nimport { getProject, logout, setAutoSyncValue, sync } from '../../../redux/modules/blynk/actions';\nimport styles from './styles.module.scss';\nimport Widget from './Widget/Widget';\nimport Scrollbar from '../Scrollbar/Scrollbar';\n\nexport class ProjectPage extends React.Component {\n    async componentDidMount() {\n        const { history, getProject } = this.props;\n        try {\n            await getProject();\n        } catch (e) {\n            history.push('/connection');\n        }\n    }\n\n    renderWidgets() {\n        const { project, activeTabId } = this.props;\n\n        const widgets = [];\n        project.get('widgets').forEach(widget => {\n            const tabId = widget.get('tabId');\n            if (tabId === activeTabId || widget.get('type') === 'TABS') {\n                widgets.push(<Widget key={widget.get('id')} widget={widget} />);\n            }\n        });\n        return widgets;\n    }\n\n    handleLogout = () => {\n        const { history, logout } = this.props;\n        logout();\n        history.push('/connection');\n    };\n\n    handleChangeAutoSync = e => {\n        const { setAutoSyncValue } = this.props;\n        const value = Number(e.currentTarget.value);\n        setAutoSyncValue(value);\n    };\n\n    handleSync = () => {\n        const { sync } = this.props;\n        sync();\n    };\n\n    render() {\n        const { project, autoSync } = this.props;\n\n        if (!project) {\n            return <div />;\n        }\n\n        const isDarkTheme = project.get('theme') === 'Blynk' || true;\n\n        return (\n            <div className={cn(styles.root, { 'bp3-dark': isDarkTheme })}>\n                <div className={styles.header}>\n                    <div className={styles.headerInner}>\n                        <div className={styles.headerTitle}>{project.get('name')}</div>\n                        <div className={styles.headerControls}>\n                            <div>\n                                <Button icon=\"refresh\" intent={Intent.PRIMARY} onClick={this.handleSync}>\n                                    Sync\n                                </Button>\n                            </div>\n                            <div>\n                                <HTMLSelect\n                                    className={styles.selectAutoSync}\n                                    onChange={this.handleChangeAutoSync}\n                                    value={autoSync}\n                                    options={[\n                                        { label: 'No Auto-sync', value: 0 },\n                                        { label: 'Auto-sync every 0.5 sec', value: 500 },\n                                        { label: 'Auto-sync every 1 sec', value: 1000 },\n                                        { label: 'Auto-sync every 2 sec', value: 2000 },\n                                        { label: 'Auto-sync every 3 sec', value: 3000 },\n                                        { label: 'Auto-sync every 5 sec', value: 5000 },\n                                        { label: 'Auto-sync every 10 sec', value: 10000 },\n                                        { label: 'Auto-sync every 15 sec', value: 15000 },\n                                        { label: 'Auto-sync every 30 sec', value: 30000 },\n                                        { label: 'Auto-sync every 60 sec', value: 60000 },\n                                    ]}\n                                />\n                            </div>\n                            <div className={styles.headerDelimiter} />\n                            <div>\n                                <Button icon=\"log-out\" intent={Intent.DANGER} onClick={this.handleLogout} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.workspace}>\n                    <SizeMe>\n                        {({ width, height }) => {\n                            return (\n                                <Scrollbar style={{ height, width }}>\n                                    <div className={styles.workspaceInner}>\n                                        <div className={styles.widgetsArea}>{this.renderWidgets()}</div>\n                                    </div>\n                                </Scrollbar>\n                            );\n                        }}\n                    </SizeMe>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        activeTabId: state.blynk.get('activeTabId'),\n        project: state.blynk.get('project'),\n        autoSync: state.blynk.get('autoSync'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        logout,\n        getProject,\n        sync,\n        setAutoSyncValue,\n    },\n)(ProjectPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport ConnectionPage from '../Pages/ConnectionPage/ConnectionPage';\nimport ProjectPage from '../Pages/ProjectPage/ProjectPage';\n\nexport default class Root extends React.Component {\n    render() {\n        const { store } = this.props;\n        return (\n            <Provider store={store}>\n                <Router>\n                    <>\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/project\" />} />\n                        <Route exact path=\"/connection\" component={ConnectionPage} />\n                        <Route exact path=\"/project\" component={ProjectPage} />\n                    </>\n                </Router>\n            </Provider>\n        );\n    }\n}\n","import 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FocusStyleManager } from '@blueprintjs/core';\nimport configureStore from './redux/store';\nimport Root from './components/Root/Root';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport './browser';\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\n// Init redux-store\nconst store = configureStore();\n\n// Mount React container\nconst target = document.querySelector('#root');\nReactDOM.render(<Root store={store} />, target);\n\nif (module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        ReactDOM.render(<Root store={store} />, target);\n    });\n}\n\nserviceWorker.unregister();\n","export function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__38qYN\",\"chart\":\"styles_chart__2sh6N\",\"header\":\"styles_header__26lnT\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__319Rw\",\"widgetLabel\":\"styles_widgetLabel__3n0kd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__19SDI\",\"styledButton\":\"styles_styledButton__KJgRv\",\"buttonContainer\":\"styles_buttonContainer__1GVHK\",\"sizeContainer\":\"styles_sizeContainer__kRN0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2NhjS\",\"title\":\"styles_title__1_T56\",\"information\":\"styles_information__2hWOG\"};"],"sourceRoot":""}